{
  "name": "Scrape emails from Google Maps",
  "nodes": [
    {
      "parameters": {},
      "id": "21d3a305-c67b-4a05-9648-d96d41f51223",
      "name": "Remove Duplicate URLs",
      "type": "n8n-nodes-base.removeDuplicates",
      "position": [
        1520,
        688
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "cdf715d2-1e06-458c-a35a-62d9e09faeac",
      "name": "Loop over queries",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1232,
        208
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "url": "=https://www.google.com/maps/search/{{ $json.query }}",
        "options": {
          "allowUnauthorizedCerts": false
        }
      },
      "id": "0f97fe2b-5124-4ffa-b6e6-21cf80ed5e63",
      "name": "Search Google Maps with query",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        928,
        688
      ],
      "executeOnce": false,
      "typeVersion": 4.2,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "jsCode": "const data = $input.first().json.data\n\nconst regex = /https?:\\/\\/[^\\/]+/g\n\nconst urls = data.match(regex)\n\nreturn urls.map(url => ({json: {url: url}}))"
      },
      "id": "2aa5270b-c184-4500-8317-52847c8242f8",
      "name": "Scrape URLs from results",
      "type": "n8n-nodes-base.code",
      "position": [
        1120,
        688
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "041797f2-2fe2-41dc-902a-d34050b9b304",
              "operator": {
                "type": "string",
                "operation": "notRegex"
              },
              "leftValue": "={{ $json.url }}",
              "rightValue": "=(google|gstatic|ggpht|schema\\.org|example\\.com|sentry-next\\.wixpress\\.com|imli\\.com|sentry\\.wixpress\\.com|ingest\\.sentry\\.io)"
            },
            {
              "id": "eb499a7e-17bc-453c-be08-a47286f726dd",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "7e0f535e-e6db-48fc-9355-60bcc7eba49c",
      "name": "Filter irrelevant URLs",
      "type": "n8n-nodes-base.filter",
      "position": [
        1328,
        688
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {}
      },
      "id": "be664ab9-7108-4945-9c9b-fff54fea9a2c",
      "name": "Request web page for URL",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1920,
        768
      ],
      "typeVersion": 4.2,
      "alwaysOutputData": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "id": "e5a5d406-9dee-49e4-b1eb-df89be10730c",
      "name": "Loop over URLs",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1728,
        688
      ],
      "typeVersion": 3,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "f67553a0-56aa-4417-a31b-3b6e251c34b9",
      "name": "Loop over pages",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1952,
        432
      ],
      "typeVersion": 3,
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const data = $json.data\n\nconst emailRegex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.(?!png|jpg|gif|jpeg)[a-zA-Z]{2,}/g\n\nconst emails = data.match(emailRegex)\n\nreturn {json: {emails: emails}}"
      },
      "id": "e103945e-7442-4d26-b8eb-7573c15f46c0",
      "name": "Scrape emails from page",
      "type": "n8n-nodes-base.code",
      "position": [
        2112,
        528
      ],
      "typeVersion": 2,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "emails"
            }
          ]
        },
        "options": {
          "mergeLists": true
        }
      },
      "id": "250a9211-7fa2-4b9e-acea-95c8da7c319d",
      "name": "Aggregate arrays of emails",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        2272,
        400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "fieldToSplitOut": "emails",
        "options": {}
      },
      "id": "8b7969f8-f5cb-459f-900e-98b40429df8b",
      "name": "Split out into default data structure",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        2480,
        400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "compare": "selectedFields",
        "fieldsToCompare": "emails",
        "options": {}
      },
      "id": "51d223d3-55eb-43e0-8907-46cec41366c2",
      "name": "Remove duplicate emails",
      "type": "n8n-nodes-base.removeDuplicates",
      "position": [
        2704,
        400
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "041797f2-2fe2-41dc-902a-d34050b9b304",
              "operator": {
                "type": "string",
                "operation": "notRegex"
              },
              "leftValue": "={{ $json.emails }}",
              "rightValue": "=(google|gstatic|ggpht|schema\\.org|example\\.com|sentry\\.wixpress\\.com|sentry-next\\.wixpress\\.com|ingest\\.sentry\\.io|sentry\\.io|imli\\.com)"
            }
          ]
        },
        "options": {}
      },
      "id": "3c915a7e-212a-42f5-9e83-699895d23412",
      "name": "Filter irrelevant emails",
      "type": "n8n-nodes-base.filter",
      "position": [
        2912,
        400
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "id": "3111f065-0921-46e1-89d3-548187b0833c",
      "name": "Save emails to Google Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        3104,
        400
      ],
      "typeVersion": 4.5
    },
    {
      "parameters": {},
      "id": "593b3e58-11fb-4154-9dd8-0925a59be68e",
      "name": "Starts scraper workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        704,
        688
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "eb6a1de5-9860-4bd0-a82b-9e16083317c9",
      "name": "Run workflow",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        992,
        208
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "amount": 2
      },
      "id": "538c9b7b-7f01-4169-90ba-5f2bf21db1f2",
      "name": "Wait between executions",
      "type": "n8n-nodes-base.wait",
      "position": [
        1600,
        304
      ],
      "webhookId": "40eb11a9-0f7d-4932-993e-0052b69dbf9b",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $workflow.id }}"
        },
        "mode": "each",
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "id": "3339ddb5-89d5-400f-a17e-e8db3af1e9e1",
      "name": "Execute scraper for query",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        1424,
        304
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "content": "## ðŸ›  Setup\n1. Setup your list of queries in the \"Run workflow\" manual trigger node. Watch  this [video](https://youtu.be/HaiO-UeiKBA) on how to generate the queries with ChatGPT.\n3. Choose a sheet to populate with data in the **Google Sheets node**\n4. Run the workflow and start getting leads into your Google Sheets document",
        "height": 180,
        "width": 740,
        "color": 5
      },
      "id": "2020f29c-98bd-4f4d-a142-b1612286351b",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        32,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "**Optional** ðŸ‘‡\nSet wait time between each query workflow execution. Default is 2 seconds.",
        "height": 100,
        "color": 6
      },
      "id": "2b6719da-3e22-4701-b193-e21a43b42635",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1600,
        192
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Scraper ðŸ‘‡\nThis workflow will be executed in the background for each query. Click the **All executions** tab in the left sidebar to see the executions running.",
        "height": 100,
        "width": 480
      },
      "id": "d94f92b9-4c3b-4fed-ad62-7ae6d1cef83b",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        704,
        560
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "ðŸ‘† \n1. Setup your **credentials**. Here's a [video tutorial](https://youtu.be/O5RnWDM27M8) on how to do that.\n\n2. Choose which document and sheet to save the scraped emails to. ",
        "height": 180,
        "color": 4
      },
      "id": "09b21b7d-4395-4b9a-937a-c2dee6844076",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3120,
        608
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Google Maps Automatic Email Scraper\n\nThis workflow automatically scrapes emails from businesses on Google Maps based on a list of queries that you provide.",
        "height": 140,
        "width": 480,
        "color": 7
      },
      "id": "92d3da22-a83f-4903-9c5e-f97b427a0f42",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        32,
        -64
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "**Optional** ðŸ‘†\nAdd or change the regex for filtering irrelevant URLs.",
        "height": 100,
        "width": 160,
        "color": 6
      },
      "id": "c30dda0d-8079-46c3-a7b6-85ad7cbd9471",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1312,
        848
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "**Optional** ðŸ‘†\nAdd or change the regex for filtering irrelevant/incorrect email addresses.",
        "height": 100,
        "width": 200,
        "color": 6
      },
      "id": "cfdd180c-1dd3-43e6-b134-a1524a3c6630",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2880,
        560
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {
    "Run workflow": [
      {
        "json": {
          "query": "hollywood+dentist"
        }
      },
      {
        "json": {
          "query": "downtown+los+angeles+dentist"
        }
      },
      {
        "json": {
          "query": "santa+monica+dentist"
        }
      },
      {
        "json": {
          "query": "westwood+dentist"
        }
      },
      {
        "json": {
          "query": "west+l.a.+dentist"
        }
      },
      {
        "json": {
          "query": "the+valley+dentist"
        }
      },
      {
        "json": {
          "query": "echo+park+dentist"
        }
      },
      {
        "json": {
          "query": "culver+city+dentist"
        }
      },
      {
        "json": {
          "query": "pasadena+dentist"
        }
      },
      {
        "json": {
          "query": "silver+lake+dentist"
        }
      },
      {
        "json": {
          "query": "mid-wilshire+dentist"
        }
      },
      {
        "json": {
          "query": "beverly+hills+dentist"
        }
      },
      {
        "json": {
          "query": "north+hills+dentist"
        }
      },
      {
        "json": {
          "query": "south+los+angeles+dentist"
        }
      }
    ]
  },
  "connections": {
    "Run workflow": {
      "main": [
        [
          {
            "node": "Loop over queries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop over URLs": {
      "main": [
        [
          {
            "node": "Loop over pages",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Request web page for URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop over pages": {
      "main": [
        [
          {
            "node": "Aggregate arrays of emails",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Scrape emails from page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop over queries": {
      "main": [
        [],
        [
          {
            "node": "Execute scraper for query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicate URLs": {
      "main": [
        [
          {
            "node": "Loop over URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter irrelevant URLs": {
      "main": [
        [
          {
            "node": "Remove Duplicate URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove duplicate emails": {
      "main": [
        [
          {
            "node": "Filter irrelevant emails",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrape emails from page": {
      "main": [
        [
          {
            "node": "Loop over pages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Starts scraper workflow": {
      "main": [
        [
          {
            "node": "Search Google Maps with query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait between executions": {
      "main": [
        [
          {
            "node": "Loop over queries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter irrelevant emails": {
      "main": [
        [
          {
            "node": "Save emails to Google Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Request web page for URL": {
      "main": [
        [
          {
            "node": "Loop over URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrape URLs from results": {
      "main": [
        [
          {
            "node": "Filter irrelevant URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute scraper for query": {
      "main": [
        [
          {
            "node": "Wait between executions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate arrays of emails": {
      "main": [
        [
          {
            "node": "Split out into default data structure",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Google Maps with query": {
      "main": [
        [
          {
            "node": "Scrape URLs from results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split out into default data structure": {
      "main": [
        [
          {
            "node": "Remove duplicate emails",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a5449233-a8be-43cb-8562-4c3b9372b854",
  "meta": {
    "instanceId": "94946a2d10c535694da679838317663f77bd6434327f2d99052b1b238b77c2ec"
  },
  "id": "V4BAXTdVvkIyRBSm",
  "tags": []
}